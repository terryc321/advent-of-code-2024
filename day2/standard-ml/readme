
development day 2 part 1 okay

part 2 seemed to diverge get values did not expect

somethings not quite right .
not entirely clear on the problem .
what is criteria for fixable ?

7 6 4 2 1
1 2 7 8 9
9 7 6 2 1
1 3 2 4 5
8 6 4 4 1
1 3 6 7 9

The levels are either all increasing or all decreasing.
Any two adjacent levels differ by at least one and at most three.

safe xs
 if xs = () then safe
 if xs = (h::t) then safe2 h t

always increasing h :: h2 :: t2  that h <= h2
alwatys decreasing h :: h2 :: t2 then h >= h2  ok

safe2 h t
  if t = () then safe
  if t = (h2 :: t2) then if 


CANNOT BE EQUAL = MUST DIFFER BY 1 AND ATMOST 3


(* ===================================== *)
allInc xs =
  if xs = [] then true
  else if xs = (h :: t) then allInc2 h t

allInc2 h t =
  if xs = [] then true
  else if xs = (h2 :: t2) then if h <= h2 then allInc2 h2 t2
                               else false


(* ===================================== *)
allDec xs =
  if xs = [] then true
  else if xs = (h :: t) then allDec2 h t

allDec2 h t =
  if xs = [] then true
  else if xs = (h2 :: t2) then if h >= h2 then allDec2 h2 t2
                               else false









val lines = fn : string -> string list
val lines2 = fn : TextIO.instream -> string list
val chomp = fn : string -> string
exception MyLines
val ss = fn : string -> string list
val strs =
  ["90 91 93 96 93","3 5 7 10 11 11","35 37 39 42 46","67 70 72 74 79",
   "9 12 13 16 15 16 19","48 51 52 55 58 61 58 57","3 4 7 9 8 9 9",
   "22 25 28 30 28 32","38 41 44 45 42 49","54 57 59 59 61",
   "54 55 55 56 58 55","66 68 70 71 72 72 75 75","32 35 35 38 42",
   "22 24 26 28 28 31 34 41","55 57 59 63 64","18 21 25 26 28 27",...]
  : string list
val lstrs =
  [["90","91","93","96","93"],["3","5","7","10","11","11"],
   ["35","37","39","42","46"],["67","70","72","74","79"],
   ["9","12","13","16","15","16","19"],
   ["48","51","52","55","58","61","58","57"],["3","4","7","9","8","9","9"],
   ["22","25","28","30","28","32"],["38","41","44","45","42","49"],
   ["54","57","59","59","61"],["54","55","55","56","58","55"],
   ["66","68","70","71","72","72","75","75"],["32","35","35","38","42"],
   ["22","24","26","28","28","31","34","41"],["55","57","59","63","64"],
   ["18","21","25","26","28","27"],...] : string list list
val fs = fn : string -> int
val nums =
  [[90,91,93,96,93],[3,5,7,10,11,11],[35,37,39,42,46],[67,70,72,74,79],
   [9,12,13,16,15,16,19],[48,51,52,55,58,61,58,57],[3,4,7,9,8,9,9],
   [22,25,28,30,28,32],[38,41,44,45,42,49],[54,57,59,59,61],
   [54,55,55,56,58,55],[66,68,70,71,72,72,75,75],[32,35,35,38,42],
   [22,24,26,28,28,31,34,41],[55,57,59,63,64],[18,21,25,26,28,27],...]
  : int list list
exception IncResult of bool
val inc = fn : int list -> bool
val inc2 = fn : int -> int list -> bool
val dec = fn : int list -> bool
val dec2 = fn : int -> int list -> bool
val diff = fn : int list -> bool
val diff2 = fn : int -> int list -> bool
val accept = fn : int list -> bool
val part1 = 421 : int
val removeItem = fn : 'a list -> int -> 'a list
exception Fix of bool
val fixable = fn : ('a list -> bool) -> 'a list -> bool
val fixable2 = fn : ('a list -> bool) -> 'a list -> int -> int -> bool
val part2a =
  [false,false,false,false,true,false,false,false,false,true,false,false,
   false,false,false,false,...] : bool list
val part2 = 453 : int
val it = () : unit
-




